import matplotlib.pyplot as plt
import numpy as np


def mandelbrot(c, max_iterations):
    z = 0
    n = 0
    while abs(z) <= 2 and n < max_iterations:
        z = z*z + c
        n += 1
    if n == max_iterations:
        return 0
    else:
        return n


def plot_mandelbrot(xmin, xmax, ymin, ymax, max_iterations):
    x, y = np.meshgrid(np.linspace(xmin, xmax, 1000),
                       np.linspace(ymin, ymax, 1000))
    c = x + y*1j
    mandelbrot_set = np.frompyfunc(mandelbrot, 2, 1)(c, max_iterations)
    plt.imshow(mandelbrot_set, extent=(xmin, xmax, ymin, ymax), cmap='hot')
    plt.axis('off')
    plt.show()


xmin, xmax, ymin, ymax = -2, 2, -2, 2
max_iterations = 100

plot_mandelbrot(xmin, xmax, ymin, ymax, max_iterations)

while True:
    print("Enter 'q' to quit or press Enter to zoom in:")
    if input() == 'q':
        break
    x, y = plt.ginput(2)
    xmin, xmax, ymin, ymax = x[0], x[1], y[0], y[1]
    plot_mandelbrot(xmin, xmax, ymin, ymax, max_iterations)
    print("Enter the maximum number of iterations (currently {}):".format(max_iterations))
    max_iterations = int(input())
